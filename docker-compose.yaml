version: '3.8'

services:
  app_designer_agent:
    build:
      context: ./agents/app_designer_agent
    ports:
      - "8001:8001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - app-net
  
  terraform-agent:
    build:
      context: ./agents/terraform_agent
      dockerfile: Dockerfile
    command: python terraform_agent_service.py
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OTEL_SERVICE_NAME=terraform-agent
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
    depends_on:
      - kafka
    networks:
      - app-net

  kafka-expert-agent:
    build:
      context: ./agents/kafka_agent
      dockerfile: Dockerfile
    command: python kafka_expert_agent_service.py
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - kafka
    networks:
      - app-net

  framework-core:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - MONGODB_URI=mongodb://mongo:27017
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
    depends_on:
      - kafka
      - mongo
    networks:
      - app-net

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "29092:29092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - app-net

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    networks:
      - app-net

  jaeger:
    image: jaegertracing/all-in-one:1.53
    ports:
      - "16686:16686"   # Jaeger UI
      - "6831:6831/udp" # Jaeger agent (UDP)
    networks:
      - app-net

networks:
  app-net:
    driver: bridge
